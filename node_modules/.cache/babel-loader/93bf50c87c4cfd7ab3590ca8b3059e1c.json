{"ast":null,"code":"var _jsxFileName = \"E:\\\\React training\\\\getTime\\\\src\\\\app.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let newDateTime = new Date();\n  let timeZoneNew = newDateTime.toLocaleTimeString();\n  const [currentTime, newTime] = useState(timeZoneNew);\n\n  const addNum = () => {\n    setCount(count + 1);\n  };\n\n  const subNum = () => {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: timeZoneNew\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Get Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"vN4B+hcdgX2lHsCzk0NIe6H1DMs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React training/getTime/src/app.jsx"],"names":["React","App","newDateTime","Date","timeZoneNew","toLocaleTimeString","currentTime","newTime","useState","addNum","setCount","count","subNum"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,MAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,MAAIC,WAAW,GAAGF,WAAW,CAACG,kBAAZ,EAAlB;AAEA,QAAK,CAACC,WAAD,EAAaC,OAAb,IAAwBC,QAAQ,CAACJ,WAAD,CAArC;;AACA,QAAMK,MAAM,GAAG,MAAM;AACjBC,IAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACjBF,IAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAA,sBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GAzBQH,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction App(){\r\n    let newDateTime = new Date();\r\n    let timeZoneNew = newDateTime.toLocaleTimeString();\r\n\r\n    const[currentTime,newTime] = useState(timeZoneNew);\r\n    const addNum = () => {\r\n        setCount(count + 1);\r\n    }\r\n    const subNum = () => {\r\n        setCount(count - 1);\r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n            <div className='mainWrapper'>\r\n            <div className='innerWrapper'>\r\n                <div className='bar'>\r\n                    <p>{timeZoneNew}</p>\r\n                    <button>Get Time</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}